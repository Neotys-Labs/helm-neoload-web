apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nlweb.fullname" . }}-back
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nlweb.labels" . | nindent 4 }}
    {{- range $key, $value := .Values.neoload.labels.backend }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  annotations:
    {{- range $key, $value := .Values.neoload.annotations.backend }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount.backend }}
  selector:
    matchLabels:
      {{- include "nlweb.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nlweb.backend.selectorLabels" . | nindent 8 }}
        {{- range $key, $value := .Values.neoload.labels.backend }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        {{- range $key, $value := .Values.neoload.annotations.backend }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "nlweb.serviceAccountName" . }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.backend.repository }}:{{ include "nlweb.backend.imageTag" . }}"
          imagePullPolicy: {{ .Values.image.backend.pullPolicy }}
          env:
            - name: MEMORY_MAX
              value: {{ .Values.neoload.configuration.backend.java.xmx }}
            - name: MONGODB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "nlweb.fullname" . }}-mongo-secret
                  key: host
            - name: MONGODB_PORT
              value: {{ default "27017" (.Values.neoload.configuration.backend.mongo.port | quote) }}
            {{- if .Values.mongodb.usePassword }}
            - name: MONGODB_LOGIN
              valueFrom:
                secretKeyRef:
                  name: {{ include "nlweb.fullname" . }}-mongo-secret
                  key: username
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "nlweb.fullname" . }}-mongo-secret
                  key: password
            {{- end }}
            {{- if .Values.neoload.configuration.backend.licensingPlatformToken }}
            - name: LICENSING_PLATFORM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "nlweb.fullname" . }}-licensing-secret
                  key: licensingPlatformToken
            {{- end }}
            - name: MONGODB_MAX_POOLSIZE
              value: {{ .Values.neoload.configuration.backend.mongo.poolSize | quote }}
            - name: NEOLOAD_WEB_PUBLIC_URL
              value: {{ printf "%s%s" (include "nlweb.helpers.getScheme" .) (.Values.services.webapp.host) | required "NeoLoad Web Public URL (.Values.services.webapp.host) value is required." | quote }}
            - name: NEOLOAD_WEB_API_PUBLIC_URL
              value: {{ printf "%s%s" (include "nlweb.helpers.getScheme" .) (.Values.services.api.host) | required "NeoLoad Web API URL (.Values.services.api.host) value is required." | quote }}
            - name: FILE_STORAGE_ROUTER_BASE_URL
              value: {{ printf "%s%s" (include "nlweb.helpers.getScheme" .) (.Values.services.files.host) | required "NeoLoad Web Files API URL (.Values.services.files.host) value is required." | quote }}
            - name: INTERNAL_FILE_STORAGE_ROUTER_BASE_URL
              value: "http://{{ include "nlweb.fullname" . }}-svc-files.{{ .Release.Namespace }}.svc.cluster.local"              
            - name: FILE_PROJECT_MAX_SIZE_IN_BYTES
              value: {{ int .Values.neoload.configuration.backend.misc.files.maxUploadSizeInBytes | quote }}
            - name: NLPROJECT_MAX_UPLOADED_FILES_PER_WEEK
              value: {{ int .Values.neoload.configuration.backend.misc.files.maxUploadPerWeek | quote }}
            - name: SEND_USAGE_STATISTICS
              value: {{ default "true" (.Values.neoload.configuration.sendUsageStatistics | quote) }}
            - name: NLWEB_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "nlweb.secrets.key.name" . }}
                  key: nlwSecretKey
            - name: INTERNAL_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "nlweb.secrets.key.name" . }}
                  key: internalTokenSecret
            - name: DEPLOYMENT_TYPE
              value: "helm/kubernetes"
            - name: HA
              value: "true"
            - name: START_MODE
              value: "CLUSTER_KUB"
            - name: KUB_NAMESPACE
              value: {{ .Release.Namespace | quote }}
            {{- if eq (include "nlweb.ha.mode" .) "API" }}
            - name: KUB_SERVICE_NAME
              value: "{{ include "nlweb.fullname" . }}-svc-hazelcast"
            - name: HAZELCAST_KUBERNETES_RESOLVE_NOT_READY_ADDRESSES
              value: "true"
            {{- end -}}
            {{- if eq (include "nlweb.ha.mode" .) "DNS" }}
            - name: KUB_SERVICE_DNS_NAME
              value: "{{ include "nlweb.fullname" . }}-svc-hazelcast.{{ .Release.Namespace }}.svc.cluster.local"
            {{- end -}}
            {{- if .Values.neoload.configuration.backend.others }}
            {{- range $name, $value := .Values.neoload.configuration.backend.others }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: api
              containerPort: 1081
              protocol: TCP
            - name: files
              containerPort: 1082
              protocol: TCP
            - name: backend-admin
              containerPort: 9092
              protocol: TCP
            - name: hazelcast
              containerPort: 5701
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: api
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /status
              port: api
            initialDelaySeconds: 60
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources.backend | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
